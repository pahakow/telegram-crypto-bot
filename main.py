import os
import json
import telebot
from flask import Flask, request
from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
API_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '7672310143:AAFOKOHkZheEwEshezGhCUb8pb1AJYj_Csk')
CHANNEL_NAME = os.getenv('CHANNEL_NAME', '@cruptoprofit_ua')

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —ñ Flask
bot = telebot.TeleBot(API_TOKEN)
app = Flask(__name__)

def load_quotes():
    try:
        with open('quotes.json', 'r', encoding='utf-8') as file:
            quotes = json.load(file)
            print("–¶–∏—Ç–∞—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
            return quotes
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü–∏—Ç–∞—Ç: {e}")
        return {}

# –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
quotes = load_quotes()
current_index = 1

def send_daily_quote():
    global current_index, quotes
    try:
        if current_index > len(quotes):
            current_index = 1
        
        quote = quotes.get(str(current_index), "–ù–µ–º–∞—î —Ü–∏—Ç–∞—Ç–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.")
        message_text = f"üíé –¶–∏—Ç–∞—Ç–∏ –ø—Ä–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –Ω–∞ –∫–æ–∂–µ–Ω –¥–µ–Ω—å... \n\n{quote}"
        
        bot.send_message(CHANNEL_NAME, message_text)
        print(f"–¶–∏—Ç–∞—Ç—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ: {datetime.now()}")
        
        current_index += 1
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ü–∏—Ç–∞—Ç–∏: {e}")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞
scheduler = BackgroundScheduler()
scheduler.add_job(send_daily_quote, 'cron', hour=9, minute=0)
scheduler.start()

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è —â–æ–¥–µ–Ω–Ω–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∏—Ö —Ü–∏—Ç–∞—Ç.")

@bot.message_handler(commands=['test'])
def test_quote(message):
    send_daily_quote()
    bot.reply_to(message, "‚úÖ –¢–µ—Å—Ç–æ–≤–∞ —Ü–∏—Ç–∞—Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞!")

@app.route('/', methods=['GET', 'POST'])
def webhook():
    if request.method == 'POST':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return 'OK', 200
    return '–ë–æ—Ç –ø—Ä–∞—Ü—é—î', 200

if __name__ == '__main__':
    # –°–ø—Ä–æ–±–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤–µ–±—Ö—É–∫
    try:
        WEBHOOK_URL = os.getenv('WEBHOOK_URL')
        if WEBHOOK_URL:
            bot.set_webhook(url=WEBHOOK_URL)
            print(f"–í–µ–±—Ö—É–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {WEBHOOK_URL}")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞: {e}")
    
    # –ó–∞–ø—É—Å–∫ Flask –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
    port = int(os.getenv('PORT', 8080))
    app.run(host='0.0.0.0', port=port)